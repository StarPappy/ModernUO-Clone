name: 'Build'

trigger:
- master

variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1

jobs:
- job: BuildWindows
  displayName: 'Windows Server 2019'
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET 5'
    inputs:
      packageType: sdk
      version: '5.0.100'
  - task: NuGetAuthenticate@0
  - script: dotnet restore --force-evaluate --source https://api.nuget.org/v3/index.json
    displayName: 'Restore NuGet Packages'
  - script: dotnet build -r win-x64 -c Release --no-restore Projects/Server/Server.csproj
    displayName: 'Build Server'
  - script: dotnet build -r win-x64 -c Release --no-restore Projects/UOContent/UOContent.csproj
    displayName: 'Build UO Content'
  - script: dotnet test --no-restore
    displayName: 'Test'

- job: BuildLinux
  strategy:
    matrix:
      'CentOS 8':
        containerImage: modernuo/centos-net5:8
        os: centos.8-x64
      'CentOS 7':
        containerImage: centos:7
        os: centos.7-x64
      'Debian 9':
        containerImage: amd64/buildpack-deps:stretch
        os: debian.9-x64
      'Debian 10':
        containerImage: amd64/buildpack-deps:buster
        os: debian.10-x64
      # 'Debian 11':
      #   containerImage: amd64/buildpack-deps:bullseye
      #   os: debian.11-x64
      'Ubuntu 16':
        containerImage: amd64/buildpack-deps:xenial
        os: ubuntu.16.04-x64
      'Ubuntu 18':
        containerImage: amd64/buildpack-deps:bionic
        os: ubuntu.18.04-x64
      'Ubuntu 20':
        containerImage: amd64/buildpack-deps:focal
        os: ubuntu.20.04-x64

  displayName: Linux

  pool:
    vmImage: 'ubuntu-latest'

  container: $[ variables['containerImage'] ]

  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET 5'
    inputs:
      packageType: sdk
      version: '5.0.100'
  - task: NuGetAuthenticate@0
  - script: dotnet restore --force-evaluate --source https://api.nuget.org/v3/index.json
    displayName: 'Restore NuGet Packages'
  - script: dotnet build -r $(os) -c Release --no-restore Projects/Server/Server.csproj
    displayName: 'Build Server'
  - script: dotnet build -r $(os) -c Release --no-restore Projects/UOContent/UOContent.csproj
    displayName: 'Build UO Content'
  - script: dotnet test --no-restore
    displayName: 'Test'
