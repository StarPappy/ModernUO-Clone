/**
 * Autogenerated for ModernUO
 */

using System.Buffers;
using Server.Accounting;

namespace Server.Network
{
    public static class ConnectUOServerPoller
    {
        public const byte ConnectUOProtocolVersion = 0;
        public const byte ConnectUOServerType = 5;
        private static long _serverStart;
        public static bool ConnectUOStatsEnabled { get; set; }

        public static void Configure()
        {
            _serverStart = Core.TickCount;
            IncomingPackets.Register(0xF1, 0, false, PollInfo);
            ConnectUOStatsEnabled = ServerConfiguration.GetOrUpdateSetting("connectuo.enabled", true);
        }

        public static void PollInfo(NetState ns, CircularBufferReader reader, ref int packetLength)
        {
            var cmd = reader.ReadByte();
            if (cmd != 0xC0)
            {
                return;
            }

            var version = reader.ReadByte();
            ns.WriteConsole($"ConnectUO (v{version}) is requesting stats.");
            ns.SendServerPollInfo();
        }

        public static void SendServerPollInfo(this NetState ns)
        {
            if (ns == null)
            {
                return;
            }

            var writer = new SpanWriter(stackalloc byte[15]);
            writer.Write((byte)0xC0); // Packet ID
            writer.Write(17); // Length
            writer.Write(ConnectUOProtocolVersion); // Version
            writer.Write(ConnectUOServerType);
            writer.Write((int)(Core.TickCount - _serverStart) / 1000);
            writer.Write(Accounts.Count);
            writer.Write(TcpServer.Instances.Count);

            ns.Send(writer.Span);
        }
    }
}
